# tmux 3.1c config

#Start windows and panes at 1, not 0,
set-option -g base-index 1
set-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on


# set-option history
set-option -g history-limit 65535


# set-option xterm
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set-option -g default-terminal "screen-256color"

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

set-window-option -g xterm-keys on
set-window-option -q -g utf8 on


# escape fix
set-option -s escape-time 0
set-option -sg repeat-time 600


# unbind keys
unbind C-b
unbind C-a


# Enable/disable status bar
bind b      set-option status


# remap prefix from 'C-b' to 'C-a'
set-option -g prefix C-a
bind C-a    send-prefix
bind a      send-key C-a

# remap prefix depending from ssh or not
# remap prefix from 'C-b' to 'C-a'
if-shell '[ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]' "\
    unbind C-a; \
    unbind a; \
    set-option -g prefix C-b; \
    bind C-b    send-prefix; \
    bind b      send-key C-b; \
"


# Show a # in the window title when activity
#  *         Denotes the current window.
#  -         Marks the last window (previously selected).
#  #         Window is monitored and activity has been detected.
#  !         A bell has occurred in the window.
#  ~         The window has been silent for the monitor-silence interval.
#  Z         The window's active pane is zoomed.
set-window-option -g monitor-activity on
set-window-option -g window-status-activity-attr reverse


# If I don't set-option a title on a window, use the program name for the window title
set-window-option -g automatic-rename on


# However, don't let terminal escape sequences rename my windows
set-window-option -g allow-rename off

# Enable mouse control (clickable windows, panes, resizable panes)
set-option -g mouse on

# Toggle mouse on with  m
bind    m \
  set-option -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off with  M
bind    M \
  set-option -g mouse on \;\
  display 'Mouse: OFF'



# Copy mode
# C-a C-v or F7  : copy mode
#   v or <space> : begin selection
#   y or <enter> : yank selection to buffer and clipboard
#
# Shift-PageUp   : copy mode + PageUp
#
# Alt-Insert     : Paste buffer
#
# C-a y          : Paste buffer to netcat
#
set-window-option -g mode-keys vi
bind      C-v                 copy-mode
bind -T   copy-mode-vi Escape send-keys -X Escape cancel
bind -T   copy-mode-vi 'v'    send-keys -X begin-selection
bind -T   copy-mode-vi 'y'    send-keys -X copy-pipe-and-cancel "xsel -b -i"
unbind -T copy-mode-vi Enter
bind -T   copy-mode-vi Enter  send-keys -X copy-pipe-and-cancel "xsel -b -i"
bind -n   M-IC                paste-buffer
bind      y                   run-shell "tmux show-buffer | nc -N localhost 5556"\; display-message "Buffer Copied..."
bind -n   S-PageUp            copy-mode -eu

bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Enable fast scrolling with Ctrl
bind -T root         C-WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T copy-mode-vi C-WheelUpPane   send -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send -X halfpage-down


# copy with mouse
bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xsel -b -i"


# Middle click in pane is paste buffer
# Middle click on status is paste to netcat
bind -n MouseDown2Pane paste-buffer
bind -n MouseDown2Status run-shell "tmux show-buffer | nc localhost 5556; sleep 1; tmux show-buffer | nc localhost 5556"\; display-message "Buffer Copied..."



# Windows and panes
# tmux 2.0 needed for #{pane_current_path} else use $PWD
bind    |       split-window -fh -c "#{pane_current_path}"  # hard vertical split
bind    &       split-window -h -c "#{pane_current_path}"   # soft vertical split
bind    !       split-window -h -c "#{pane_current_path}"   # soft vertical split
bind    -       split-window -v -c "#{pane_current_path}"   # soft horizontal split
bind    _       split-window -fv -c "#{pane_current_path}"  # hard horizontal split
bind    c       new-window -c "#{pane_current_path}"        # new window
bind    p       previous-window
bind    n       next-window
bind    k       kill-pane
bind    K       kill-window
bind    >       swap-pane -D                                # swap current pane with next one
bind    <       swap-pane -U                                # swap current pane with previous one



# ALT arrow to next window
bind -n M-Right next-window
bind -n M-Left  previous-window


## F-keys
#bind -n F2      new-window -c "#{pane_current_path}"
#bind -n C-F2    split-window -h -c "#{pane_current_path}"
#bind -n S-F2    split-window -v -c "#{pane_current_path}"
#bind -n F3      previous-window
#bind -n F4      next-window
#bind -n F6      detach-client
#bind -n F7      copy-mode
#bind -n C-F6    kill-pane
#bind -n F12     source ~/.tmux/f-keys.disable \; display-message "Fn-keys: DISABLED"


# VIM and TMUX support
# S-Left   prefix C-h    move pane left
# S-Right  prefix C-l    move pane right
# S-Up     prefix C-k    move pane up
# S-Down   prefix C-j    move pane down
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n S-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n S-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n S-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n S-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

#bind -n PageUp if-shell "$is_vim" "send-keys PageUp" "copy-mode -eu"
# bind C-h select-pane -L
# bind C-l select-pane -R
# bind C-j select-pane -D
# bind C-k select-pane -U


# Sessions
bind    C-s     new-session
bind    C-f     command-prompt -p find-session 'switch-client -t %%'  # find session

#bind    q       confirm-before kill-session
bind    q       ls \; command-prompt  "kill-session -t '%%'"


# kill Server
bind    Q       confirm-before kill-server



# reload config
bind    r       source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind    R       refresh-client



# status bar
set-option -g status-interval 2
set-option -g status-right-length 120
set-option -g status-right '#(~/.tmux/status_bar.sh)'
set-option -g status-left '[#{?client_prefix,#[reverse]#(tmux show-option -gqv prefix)#[noreverse],#(tmux show-option -gqv prefix)}] '
set-option -g pane-border-status bottom
set-option -g pane-border-format '#P: #{pane_current_path}'
# set-option -g pane-border-format '#P: #{pane_current_path} #(/bin/bash ~/.tmux/git-status.sh #{pane_current_path} #{pane_active})'


# Colorscheme
source-file ~/.tmux/railscasts.conf
